{"version":3,"sources":["context/reducers.js","context/FoodContext.js","context/GlobalState.js","components/builder/Inputfood.js","components/builder/Addfood.js","components/builder/Foodform.js","components/builder/Deletefood.js","components/builder/Foodcard.js","components/builder/Search.js","components/builder/Builder.js","components/results/Resultcard.js","components/Loader.js","components/results/Results.js","components/recipe/Homebutton.js","components/recipe/Original.js","components/recipe/Recipe.js","components/App.js","index.js"],"names":["uuidv4","require","reducer","state","action","type","category","id","modifiedState","Object","assign","filteredCategory","toConsumableArray","filter","ingredient","removeFood","inputValue","stateCategory","push","name","addFood","defaultIngredients","Error","FoodContext","React","createContext","request","GlobalState","_ref","children","apiKey","process","proteins","grains","veggies","custom","storedFoods","window","localStorage","getItem","parsedFoods","JSON","parse","_useReducer","useReducer","_useReducer2","slicedToArray","ingredientState","dispatch","setItem","stringify","useEffect","_useState","useState","searchTerms","response","_useState2","APIState","modifyAPI","_useState3","_useState4","recipeInfo","setRecipeInfo","react_default","a","createElement","context_FoodContext","Provider","value","ingredients","selectFood","document","querySelector","concat","checked","foodInfo","objectSpread","filteredSearch","item","sendAPIRequest","APIResponse","searchArray","length","APIRequest","forEach","searchString","join","toLowerCase","method","url","headers","x-rapidapi-host","x-rapidapi-key","qs","number","ranking","ignorePantry","error","body","res","console","log","alert","getRecipeByID","key","options","Inputfood","handleClick","handleChange","handleBlur","globalState","useContext","inputBox","useRef","onSubmit","e","preventDefault","addedFood","current","ref","onBlur","onChange","autoFocus","placeholder","onClick","className","Addfood","Foodform","inputEnabled","toggleInputState","Deletefood","Foodcard","title","contents","icon","setStateInput","foodContents","map","Fragment","classList","toggle","htmlFor","Search","react_router_dom","to","Builder","Resultcard","img","src","alt","Spinner","Loader","fadeIn","Results","foodTitles","updateFoodTitles","counter","waitedThreeSeconds","foodStringArray","term","setTimeout","results","image","Homebutton","class","Original","link","href","target","Recipe","displayedInstructions","_globalState$recipeIn","servings","extendedIngredients","readyInMinutes","instructions","analyzedInstructions","sourceUrl","steps","step","originalString","getOwnPropertyNames","App","react_router","path","component","exact","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.96384a60.chunk.js","sourcesContent":["// Should we refactor to use functions to preserve namespaces?\r\n// We should also refactor the second argument of reducer to just be 'action' to make the functions more specific\r\n// Reducer breaks when we move the function to global?\r\n\r\n// Next goal: Refactor this page. Make it cleaner, more readable, and more scalable.\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nfunction removeFood(state, category, id) {\t\r\n\tconst modifiedState = Object.assign({}, state);  // Copy the state object\r\n\tconst stateCategory = [...modifiedState[category]];  // Copy the array of the category of food to modify \r\n\tconst filteredCategory = stateCategory.filter(ingredient => // Filter the array\r\n\t\tingredient.id !== id\r\n\t)\r\n\t// Assign new array to modified state\r\n\tmodifiedState[category] = filteredCategory; \r\n\t// Update state\r\n\treturn modifiedState; \r\n}\r\n\r\nfunction addFood(state, category, inputValue) {\r\n\tconst modifiedState = Object.assign({}, state); // Copy of object\r\n\tconst stateCategory = [...modifiedState[category]]; // Array of category\r\n\tstateCategory.push({ // Push to array\r\n\t\tname: inputValue,\r\n\t\tid: uuidv4()\r\n\t})\r\n\tmodifiedState[category] = stateCategory;\r\n\treturn modifiedState;\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'remove_food':\r\n\t\t\treturn removeFood(state, action.category, action.id);\r\n\t\tcase 'add_food':\r\n\t\t\treturn addFood(state, action.category, action.inputValue)\r\n\t\tcase 'load_foods':\r\n\t\t\treturn action.defaultIngredients\r\n\t\tdefault: throw new Error()\r\n\t}\r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\r\n\r\nconst FoodContext = React.createContext();\r\n\r\nexport default FoodContext;","import React, { useReducer, useState, useEffect } from 'react';\r\nimport reducer from './reducers';\r\nimport FoodContext from './FoodContext';\r\nvar request = require('request');\r\n\r\n\r\n// This is the top-level component of the app\r\nexport default function GlobalState({children}) {\r\n\tconst apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n\tconst defaultIngredients = {\r\n\t\tproteins: [\r\n\t\t\t{ name: 'Beef', id: 'p1'}, \r\n\t\t\t{ name: 'Chicken', id: 'p2'},\r\n\t\t\t{ name: 'Pork', id: 'p3'},\r\n\t\t\t{ name: 'Tofu', id: 'p4'},\r\n\t\t\t{ name: 'Salmon', id: 'p5'},\r\n\t\t],\r\n\t\tgrains: [\r\n\t\t\t{ name: 'White Rice', id: 'g1'},\r\n\t\t\t{ name: 'Brown Rice', id: 'g2'},\r\n\t\t\t{ name: 'Quinoa', id: 'g3'},\r\n\t\t],\r\n\t\tveggies: [\r\n\t\t\t{ name: 'Broccoli', id: 'v1'},\r\n\t\t\t{ name: 'Spinach', id: 'v2'},\r\n\t\t\t{ name: 'Lettuce', id: 'v3'},\r\n\t\t],\r\n\t\tcustom: [\r\n\t\t\t{ name: 'Peanuts', id: 'c1'},\r\n\t\t],\r\n\t}\r\n\t\r\n\tconst storedFoods = window.localStorage.getItem('ingredientList'); \r\n\tconst parsedFoods = JSON.parse(storedFoods)\r\n\r\n\tconst [ingredientState, dispatch] = useReducer(reducer, parsedFoods);\r\n\r\n\t// If localStorage has nothing, we must populate state first to render the app, then write the default ingredients to localStorage\r\n\tif (!parsedFoods) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'load_foods',\r\n\t\t\tdefaultIngredients\r\n\t\t})\r\n\t\twindow.localStorage.setItem('ingredientList', JSON.stringify(defaultIngredients));\r\n\t}\r\n\r\n\t// Write to localStorage when foodCards are modified\r\n\tuseEffect(() => window.localStorage.setItem('ingredientList', JSON.stringify(ingredientState)), [ingredientState]);\r\n\r\n\tconst [APIState, modifyAPI] = useState({\r\n\t\tsearchTerms: [],\r\n\t\tresponse: []\r\n\t});\r\n\r\n\tconst [recipeInfo, setRecipeInfo] = useState({});\r\n\r\n\t// Handles an array that will become the API request's search terms\r\n\tfunction selectFood(id, name) {\r\n\t\tconst checkBox = document.querySelector(`input[id=\"${id}\"]`);\r\n\t\tif (checkBox.checked) {\r\n\t\t\tconst foodInfo = {name, id} // Set up an object to push to the array, incase we need to delete by ID\r\n\t\t\tmodifyAPI({...APIState, searchTerms: [...APIState.searchTerms, foodInfo]})\r\n\t\t} else {\r\n\t\t\tconst searchArray = [...APIState.searchTerms]; // Copy the search array\r\n\t\t\tconst filteredSearch = searchArray.filter(item => item.id !== id); // Filter the search array\r\n\t\t\tmodifyAPI({...APIState, searchTerms: [...filteredSearch]}); // Update the state\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getRecipeByID(id) {\r\n\t\tlet APIResponse = []\r\n\t\tconst key = apiKey;\r\n\t\tvar options = { \r\n\t\t\tmethod: 'GET',\r\n\t\t  url: `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information`,\r\n\t\t  headers: { \r\n\t\t\t\"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\r\n\t\t\t\"x-rapidapi-key\": key\r\n\t\t  },\r\n\t\t};\r\n\r\n\t\t// Add the API response to the app's state\r\n\t\trequest(options, function (error, response, body) {\r\n\t\t\tif (error) throw new Error(error);\r\n\t\t  const res = JSON.parse(body);\r\n\t\t\tconsole.log('Parsed response: ', res);\r\n\t\t\tAPIResponse = res;\r\n\t\t\treturn setRecipeInfo(APIResponse); \r\n\t\t});\r\n\r\n\t\t// Placeholder response\r\n\t\t// Incase there needs to be any testing without using too many API calls\r\n\t\t// const res = {\r\n\t\t// \tservings: 10,\r\n\t\t// \textendedIngredients: [\r\n\t\t// \t\t{\r\n\t\t// \t\t\toriginalString: \"1 quart water or chicken stock\"\r\n\t\t// \t\t},\r\n\t\t// \t\t{\r\n\t\t// \t\t\toriginalString: \"1 quart water or chicken stock\"\r\n\t\t// \t\t},\r\n\t\t// \t\t{\r\n\t\t// \t\t\toriginalString: \"1 quart water or chicken stock\"\r\n\t\t// \t\t}\r\n\t\t// \t],\r\n\t\t// \ttitle: \"Char-Grilled Beef Tenderloin with Three-Herb Chimichurri\",\r\n\t\t// \treadyInMinutes: 45,\r\n\t\t// \timage: \"https://spoonacular.com/recipeImages/char-grilled-beef-tenderloin-with-three-herb-chimichurri-156992.jpg\",\r\n\t\t// \tinstructions: \"Lorem Ipsum\",\r\n\t\t// \tanalyzedInstructions: [{\r\n\t\t// \t\t\tname: \"\",\r\n\t\t// \t\t\tsteps: [\r\n\t\t// \t\t\t\t{\r\n\t\t// \t\t\t\t\tnumber: 1,\r\n\t\t// \t\t\t\t\tstep: \"lorem ipsum\"\r\n\t\t// \t\t\t\t},\r\n\t\t// \t\t\t\t{\r\n\t\t// \t\t\t\t\tnumber: 2,\r\n\t\t// \t\t\t\t\tstep: \"lorem ipsum\"\r\n\t\t// \t\t\t\t},\r\n\t\t// \t\t\t\t{\r\n\t\t// \t\t\t\t\tnumber: 3,\r\n\t\t// \t\t\t\t\tstep: \"lorem ipsum\"\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t]\r\n\t\t// \t\t}\r\n\t\t// \t],\r\n\t\t// \tsourceUrl: \"http://www.epicurious.com/recipes/food/views/Char-Grilled-Beef-Tenderloin-with-Three-Herb-Chimichurri-235342\"\r\n\t\t// }\r\n\t\t// return setRecipeInfo(res)\r\n\t}\r\n\r\n\tfunction sendAPIRequest() {\r\n\t\tlet APIResponse = [];\r\n\t\tconst searchArray = [...APIState.searchTerms]; // Make a copy of the state\r\n\t\tif (!searchArray.length) {\r\n\t\t\talert('You must select at least one food to submit')\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconst APIRequest = []; // Initialize an array for each name\r\n\t\tsearchArray.forEach(item => APIRequest.push(item.name)); // Extract each name and push to array\r\n\r\n\t\t// Send information to Spoonacular API\r\n\t\tconst searchString = APIRequest.join().toLowerCase();\r\n\t\tconst key = apiKey;\r\n\t\tvar options = { \r\n\t\t\tmethod: 'GET',\r\n\t\t  url: \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/findByIngredients\",\r\n\t\t  headers: { \r\n\t\t\t\"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\r\n\t\t\t\"x-rapidapi-key\": key\r\n\t\t  },\r\n\t\t  qs: { \r\n\t\t\t\"number\": \"10\",\r\n\t\t\t\"ranking\": \"1\",\r\n\t\t\t\"ignorePantry\": \"false\",\r\n\t\t\t\"ingredients\": searchString \r\n\t\t  }\r\n\t\t};\r\n\r\n\t\t// Add the API response to the app's state\r\n\t\trequest(options, function (error, response, body) {\r\n\t\t\tif (error) throw new Error(error);\r\n\t\t  const res = JSON.parse(body);\r\n\t\t\tconsole.log('Parsed response: ', res);\r\n\t\t\tAPIResponse = [...res];\r\n\t\t\treturn modifyAPI({...APIState, response: [...APIResponse]}); \r\n\t\t});\r\n\r\n\t\t// // Placeholder response so we don't use up too many API calls\r\n\t\t// const res = [\r\n\t\t// \t{\r\n\t\t// \t\tid: 1,\r\n\t\t// \t\ttitle: 'title1',\r\n\t\t// \t\timage: 'https://picsum.photos/200'\r\n\t\t// \t},\r\n\t\t// \t{\r\n\t\t// \t\tid: 2,\r\n\t\t// \t\ttitle: 'title2',\r\n\t\t// \t\timage: 'https://picsum.photos/200'\r\n\t\t// \t},\r\n\t\t// \t{\r\n\t\t// \t\tid: 3,\r\n\t\t// \t\ttitle: 'title3',\r\n\t\t// \t\timage: 'https://picsum.photos/200'\r\n\t\t// \t}\r\n\t\t// ]\r\n\t\t// return modifyAPI({...APIState, response: [...res]}); \r\n\t}\r\n\r\n\t// Passing these functions to event listeners will call dispatch with these particular configurations\r\n\tfunction removeFood(id, category) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'remove_food',\r\n\t\t\tid,\r\n\t\t\tcategory\r\n\t\t})\r\n\t}\r\n\r\n\tfunction addFood(inputValue, category) {\r\n\t\tdispatch({\r\n\t\t\ttype: 'add_food',\r\n\t\t\tinputValue,\r\n\t\t\tcategory\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FoodContext.Provider value={{\r\n\t\t\tingredients: ingredientState,\r\n\t\t\tremoveFood,\r\n\t\t\taddFood,\r\n\t\t\tselectFood,\r\n\t\t\tsendAPIRequest,\r\n\t\t\tAPIState,\r\n\t\t\tmodifyAPI,\r\n\t\t\trecipeInfo,\r\n\t\t\tgetRecipeByID,\r\n\t\t\tsetRecipeInfo\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</FoodContext.Provider>\r\n\t)\r\n}\r\n","import React, { useRef, useContext } from 'react';\r\nimport FoodContext from '../../context/FoodContext';\r\n\r\nexport default function Inputfood({category, handleClick, handleChange, handleBlur}) {\r\n\tconst globalState = useContext(FoodContext);\r\n\r\n\tconst inputBox = useRef(null);\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\thandleChange({inputValue: ''}); // Reset internal state\r\n\t\tconst addedFood = inputBox.current.value;\r\n\t\tif (!addedFood.length) {\r\n\t\t\talert('You cannot submit a blank food item');\r\n\t\t\treturn\r\n\t\t}\r\n\t\tinputBox.current.value = ''; // Reset input box\r\n\t\tglobalState.addFood(addedFood, category);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit} name=\"foodCardBottom\">\r\n\t\t\t<input \r\n\t\t\t\tref={inputBox}\r\n\t\t\t\tonBlur={() => handleBlur(false) } // Sets inputEnabled to false for better UX\r\n\t\t\t\tonChange={() => handleChange({inputValue: inputBox.current.value})} \r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tautoFocus\r\n\t\t\t\tplaceholder=\"...\" \r\n\t\t\t/>\r\n\t\t\t<button \r\n\t\t\t\ttype=\"button\" \r\n\t\t\t\tname=\"cancelAdd\" \r\n\t\t\t\tonClick={() => handleClick(false)} // Sets inputEnabled state to false\r\n\t\t\t>\r\n\t\t\t\t<i className=\"fas fa-times\"></i>\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React from 'react';\r\n// Figure out how to position the button the way we want\r\n\r\nexport default function Addfood({handleClick}) {\r\n\treturn (\r\n\t\t// We only surround this button in form tags so we can easily apply the style to it. We should refactor this later.\r\n\t\t<form name=\"foodCardBottom\">\r\n\t\t\t<button type=\"button\" name=\"Add\" onClick={() => handleClick(true)}>\r\n\t\t\t\t<i className=\"fas fa-plus\"></i>\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","import React, { useState } from 'react';\r\nimport Inputfood from './Inputfood';\r\nimport Addfood from './Addfood';\r\n\r\nexport default function Foodform({handleChange, category}) {\r\n\tconst [inputEnabled, toggleInputState] = useState(false);\r\n\tif (inputEnabled) {\r\n\t\treturn (\r\n\t\t\t<Inputfood \r\n\t\t\t\thandleClick={toggleInputState} \r\n\t\t\t\thandleBlur={toggleInputState}\r\n\t\t\t\thandleChange={handleChange} \r\n\t\t\t\tcategory={category} \r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<Addfood \r\n\t\t\thandleClick={toggleInputState} \r\n\t\t/>\r\n\t)\r\n}\r\n","import React, { useContext } from 'react';\r\nimport FoodContext from '../../context/FoodContext';\r\n\r\nexport default function Deletefood({id, category}) {\r\n\tconst globalState = useContext(FoodContext);\r\n\treturn (\r\n\t\t<span onClick={() => globalState.removeFood(id, category)}>\r\n\t\t\t<i className=\"fas fa-times\"></i>\r\n\t\t</span>\r\n\t)\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Foodform from './Foodform';\r\nimport FoodContext from '../../context/FoodContext';\r\nimport Deletefood from './Deletefood';\r\n\r\n\r\nexport default function Foodcard({title, contents, icon, category}) {\r\n\tconst [_, setStateInput] = useState({inputValue: ''}); // This hook is just here to make a controlled component\r\n\tconst globalState = useContext(FoodContext);\r\n\r\n\t// Function to toggle the appearance of the list item when clicked\r\n\tfunction toggleAppearance(id) {\r\n\t\tconst label = document.querySelector(`label[for=\"${id}\"]`);\r\n\t\tlabel.classList.toggle('checked');\r\n\t}\r\n\r\n\t// This section is the contents of each card\r\n\tconst foodContents = contents.map((item) => {\r\n\t\treturn (\r\n\t\t\t\t<React.Fragment key={item.id}>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tid={item.id} \r\n\t\t\t\t\t\ttype=\"checkbox\" \r\n\t\t\t\t\t\tvalue={item.name}\r\n\t\t\t\t\t\tonClick={() => globalState.selectFood(item.id, item.name)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label \r\n\t\t\t\t\t\tonClick={() => toggleAppearance(item.id)}\r\n\t\t\t\t\t\thtmlFor={item.id}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<Deletefood \r\n\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t\t}\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={`foodCard foodCard--${title}`}>\r\n\t\t\t<h3>{title} <i className={`fas fa-${icon}`}></i></h3>\r\n\t\t\t<div className=\"foodCard__container\">\r\n\t\t\t\t<form name=\"foodCardInputs\">\r\n\t\t\t\t\t{foodContents}\r\n\t\t\t\t</form>\r\n\t\t\t\t<Foodform \r\n\t\t\t\t\thandleChange={setStateInput} \r\n\t\t\t\t\tcategory={category}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FoodContext from '../../context/FoodContext';\r\n\r\nexport default function Search() {\r\n\tconst globalState = useContext(FoodContext);\r\n\treturn (\r\n\t\t<Link to=\"/results\">\r\n\t\t\t<button \r\n\t\t\t\tclassName=\"button--inverse\"\r\n\t\t\t\ttitle=\"Search for foods\"\r\n\t\t\t\tonClick={globalState.sendAPIRequest}\r\n\t\t\t\ttype=\"submit\">\r\n\t\t\t\t\t<i className=\"fas fa-arrow-right\"></i>\r\n\t\t\t</button>\r\n\t\t</Link>\r\n\t)\r\n}\r\n","import React, { useContext, useEffect} from 'react';\r\nimport Foodcard from './Foodcard';\r\nimport Search from './Search';\r\nimport FoodContext from '../../context/FoodContext';\r\n\r\n\r\nexport default function Builder() {\t\r\n\tconst globalState = useContext(FoodContext);\r\n\tconst modifyAPI = globalState.modifyAPI;\r\n\t\r\n\tuseEffect(() => modifyAPI({searchTerms: [], response: []}), [modifyAPI])\r\n\r\n\treturn (\r\n\t\t<div className=\"builder\">\r\n\t\t\t\t<h1>Meal Builder</h1>\r\n\t\t\t\t<details>\r\n\t\t\t\t\t<summary><strong>How to use:</strong></summary>\r\n\t\t\t\t\t<p>1. Click ingredients to select them.</p>\r\n\t\t\t\t\t<p>2. Click the arrow button to search for meals containing your selected ingredients.</p>\r\n\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t<p>You can manage your ingredients by interacting with the ingredient cards.</p>\r\n\t\t\t\t\t<p>All of your ingredients will be saved to your browser's local storage for future access.</p>\r\n\t\t\t\t</details>\r\n\t\t\t\t<br />\r\n\t\t\t\t<div className=\"builder__categories\">\r\n\t\t\t\t\t<Foodcard \r\n\t\t\t\t\t\ttitle=\"Protein\" \r\n\t\t\t\t\t\ticon=\"drumstick-bite\" \r\n\t\t\t\t\t\tcategory=\"proteins\"\r\n\t\t\t\t\t\tcontents={globalState.ingredients.proteins} // This is an array\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Foodcard \r\n\t\t\t\t\t\ttitle=\"Grains\" \r\n\t\t\t\t\t\ticon=\"bread-slice\" \r\n\t\t\t\t\t\tcategory=\"grains\"\r\n\t\t\t\t\t\tcontents={globalState.ingredients.grains}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Foodcard \r\n\t\t\t\t\t\ttitle=\"Veggies\"\r\n\t\t\t\t\t\ticon=\"carrot\"\r\n\t\t\t\t\t\tcategory=\"veggies\"\r\n\t\t\t\t\t\tcontents={globalState.ingredients.veggies}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Foodcard \r\n\t\t\t\t\t\ttitle=\"Custom\"\r\n\t\t\t\t\t\ticon=\"utensils\"\r\n\t\t\t\t\t\tcategory=\"custom\"\r\n\t\t\t\t\t\tcontents={globalState.ingredients.custom}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Search />\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, {useContext} from 'react';\r\n// import Likebutton from './Likebutton';\r\nimport { Link } from 'react-router-dom';\r\nimport FoodContext from '../../context/FoodContext';\r\n\r\nexport default function Resultcard({title, img, id}) {\r\n\tconst globalState = useContext(FoodContext)\r\n\t\r\n\treturn (\r\n\t\t<Link to=\"/recipe\">\r\n\t\t\t<div className=\"resultCard\" onClick={() => globalState.getRecipeByID(id)}>\r\n\t\t\t\t<img src={img} alt={title} />\r\n\t\t\t\t<div className=\"resultCard__title\">\r\n\t\t\t\t\t{/* <Likebutton /> */}\r\n\t\t\t\t\t<h3>{title}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Link>\r\n\t)\r\n}\r\n","import React from 'react'\r\nvar Spinner = require('react-spinkit');\r\n\r\nexport default function Loader() {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Spinner name=\"circle\" fadeIn='none' />\r\n\t\t\t<h3>Loading...</h3>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport FoodContext from '../../context/FoodContext';\r\nimport Resultcard from './Resultcard';\r\nimport Loader from '../Loader';\r\n\r\nexport default function Results() {\r\n\tconst globalState = useContext(FoodContext);\r\n\tconst response = globalState.APIState.response;\r\n\tconst [foodTitles, updateFoodTitles] = useState([]);\r\n\r\n\tconst [counter, waitedThreeSeconds] = useState(false);\r\n\r\n\t// When this component loads, insert food titles into results description\r\n\tuseEffect(() => {\r\n\t\tconst foodStringArray = [];\r\n\t\tconst searchTerms = globalState.APIState.searchTerms; \r\n\t\tsearchTerms.forEach(term => foodStringArray.push(term.name)); \r\n\t\tconst foodTitles = foodStringArray.join(', ');\r\n\t\treturn updateFoodTitles(foodTitles) \r\n\t}, [])\r\n\r\n\tsetTimeout(() => waitedThreeSeconds(true), 2000)\r\n\r\n\t// We use (!counter) to differentiate between loading the state or not finding any results at all\r\n\tif (response.length === 0 && (!counter)) {\r\n\t\treturn <Loader />\r\n\t}\r\n\r\n\t// API Response results are processed here\r\n\tconst results = response.map(({title, image, id}) =>\r\n\t\t<Resultcard id={id} title={title} img={image} alt={title} />\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Results</h1>\r\n\t\t\t<h3>Found {response.length} result{(response.length === 1 ? '' : 's')} for meals including: {foodTitles}</h3>\r\n\t\t\t<div className=\"resultsContainer\">\r\n\t\t\t\t{results}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Homebutton() {\r\n\treturn (\r\n\t\t<Link to=\"/\">\r\n\t\t\t<button className=\"button--inverse\" title=\"Back to home page\"><i class=\"fas fa-home\"></i></button>\r\n\t\t</Link>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Original({link}) {\r\n\treturn (\r\n\t\t<a href={link} target=\"_blank\">\r\n\t\t\t<button \r\n\t\t\tclassName=\"button--inverse\"\r\n\t\t\ttitle=\"Link to original recipe\"\r\n\t\t\t>\r\n\t\t\t\t<i class=\"fas fa-link\"></i>\r\n\t\t\t</button>\r\n\t\t</a>\r\n\t)\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport FoodContext from '../../context/FoodContext';\r\nimport Loader from '../Loader';\r\nimport Homebutton from '../recipe/Homebutton';\r\nimport Original from '../recipe/Original';\r\n\r\n\r\nexport default function Recipe() {\r\n\tconst globalState = useContext(FoodContext);\r\n\tconst {\r\n\t\tservings,\r\n\t\textendedIngredients,\r\n\t\ttitle,\r\n\t\treadyInMinutes,\r\n\t\timage,\r\n\t\tinstructions,\r\n\t\tanalyzedInstructions,\r\n\t\tsourceUrl \r\n\t} = globalState.recipeInfo;\r\n\r\n\t// Check if ideal instructions format exists, and render them if they do\r\n\tlet displayedInstructions\r\n\tif (analyzedInstructions && analyzedInstructions.length > 0) {\r\n\t\tconst directions = analyzedInstructions[0].steps;\r\n\t\tdisplayedInstructions = directions.map(step => <p>{step.number}. {step.step}</p>);\r\n\t} else if (instructions) {\r\n\t\tdisplayedInstructions = <p>{instructions}</p>\r\n\t} else {\r\n\t\tdisplayedInstructions = <p>Instructions only available on original recipe (see below).</p>\r\n\t}\r\n\r\n\t// When navigating away from this page, clear the recipe from globalState\r\n\tuseEffect(() => \r\n\t\tfunction cleanup() {\r\n\t\t\treturn globalState.setRecipeInfo({})\r\n\t\t}, []\r\n\t)\r\n\r\n\tlet ingredients \r\n\tif (extendedIngredients) {\r\n\t\tingredients = extendedIngredients.map(ingredient => \r\n\t\t\t<li>{ingredient.originalString}</li>\r\n\t\t)\r\n\t} else ingredients = <li>Loading ingredients...</li>\r\n\r\n\tif (Object.getOwnPropertyNames(globalState.recipeInfo).length === 0) {\r\n\t\treturn <Loader />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"recipe\">\r\n\t\t\t<h1>{title}</h1>\r\n\r\n\t\t\t<div className=\"recipe__summary\">\r\n\t\t\t\t<img src={image} alt={title} />\r\n\t\t\t\t<div className=\"recipe__ingredients\">\r\n\t\t\t\t\t<h3>Preparation time: </h3>\r\n\t\t\t\t\t\t <p>{readyInMinutes} minutes</p>\r\n\t\t\t\t\t<h3>Number of servings: </h3>\r\n\t\t\t\t\t<p>{servings}</p>\r\n\t\t\t\t\t<h3>Ingredients:</h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{ingredients}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"recipe__instructions\">\r\n\t\t\t\t<h3>Instructions:</h3>\r\n\t\t\t\t{displayedInstructions}\r\n\t\t\t</div>\r\n\r\n\t\t\t<br></br>\r\n\r\n\t\t\t<div className=\"recipe__buttons\">\r\n\t\t\t\t<Homebutton />\r\n\t\t\t\t<Original link={sourceUrl}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport GlobalState from '../context/GlobalState';\r\nimport Builder from './builder/Builder';\r\nimport Results from './results/Results';\r\nimport Recipe from './recipe/Recipe';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\t\t<GlobalState>\r\n\t\t\t<Router>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath=\"/\" \r\n\t\t\t\t\t\tcomponent={Builder}\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t/> \r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath=\"/results\" \r\n\t\t\t\t\t\tcomponent={Results} \r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath=\"/recipe\" \r\n\t\t\t\t\t\tcomponent={Recipe} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</GlobalState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/main.scss';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nif (module.hot) {\r\n\tmodule.hot.accept();\r\n}"],"sourceRoot":""}